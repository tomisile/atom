name: Live Data Pull

on:
  schedule:
    - cron: '0/9 6-22 * * *' # Runs every 9 minutes from 7 AM to 11 PM (WAT)
  workflow_dispatch:

jobs:
  scrape_live_data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run etl script
        id: run_etl
        run: |
          python live.py > output.txt
          echo "script_output<<EOF" >> $GITHUB_OUTPUT
          cat output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          # Check if output contains üëÄ emoji
          if grep -q "üëÄ" output.txt || grep -q "üí°" output.txt; then
            echo "send_slack=true" >> $GITHUB_OUTPUT
          else
            echo "send_slack=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Send Slack notification
        if: success() && steps.run_etl.outputs.send_slack == 'true'
        uses: slackapi/slack-github-action@v2
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "${{ vars.LIVE_SLACK_CHANNEL_ID }}",
              "username": "aTom_yml",
              "icon_emoji": ":cloud:",
              "text": ":hourglass_flowing_sand: Live | Action Required - Run ${{ github.run_number }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.run_etl.outputs.script_output }}"
                  }
                }
              ]
            }
          
      - name: Commit changes to alerts_log.csv to repository
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git pull --rebase origin main
          if [ -f alerts_log.csv ]; then
            git add alerts_log.csv
            git commit -m "chore: update alerts_log.csv with live scrape results [Run ${{ github.run_number }}]" || true
            git push origin main
          else
            echo "‚ö†Ô∏è alerts_log.csv not found, skipping commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
